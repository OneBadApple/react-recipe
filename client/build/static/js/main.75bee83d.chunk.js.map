{"version":3,"sources":["utils/API.js","components/Form/Input.js","components/Form/FormBtn.js","pages/Ingredients.js","pages/Details.js","pages/RecipeCard.js","pages/Recipes.js","pages/NewRecipe.js","App.js","serviceWorker.js","index.js"],"names":["API","getRecipes","axios","get","getRecipe","id","deleteRecipe","delete","saveRecipe","recipeData","post","Input","props","react_default","a","createElement","className","Object","assign","FormBtn","style","float","marginBottom","children","Ingredients","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","i","left","right","inherits","createClass","key","value","setState","slice","class","map","Component","Details","recipe","Ingredients_Ingredients","ingredientList","src","width","instructions","instruction","RecipeCard","_this2","c1","_id","c2","type","data-toggle","data-target","aria-expanded","aria-controls","title","cookTime","difficulty","onClick","aria-labelledby","data-parent","Details_Details","Recipes","recipes","loadRecipes","then","res","data","catch","err","console","log","handleInputChange","event","_event$target","target","name","defineProperty","handleCreate","history","push","filter","classname","RecipeCard_RecipeCard","Button","bsStyle","NewRecipe","handleFormSubmit","preventDefault","split","Input_Input","onChange","placeholder","FormBtn_FormBtn","App","BrowserRouter","Nav","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qRAEeA,EAAA,CAEdC,WAAY,WACX,OAAOC,IAAMC,IAAI,gBAGlBC,UAAW,SAASC,GACnB,OAAOH,IAAMC,IAAI,eAAiBE,IAGnCC,aAAc,SAASD,GACtB,OAAOH,IAAMK,OAAO,eAAiBF,IAGtCG,WAAY,SAASC,GACpB,OAAOP,IAAMQ,KAAK,cAAeD,KCftBE,EAAQ,SAAAC,GAAK,OACxBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,QAAAE,OAAAC,OAAA,CAAOF,UAAU,gBAAmBJ,MCF3BO,EAAU,SAAAP,GAAK,OAC1BC,EAAAC,EAAAC,cAAA,SAAAE,OAAAC,OAAA,GAAYN,EAAZ,CAAmBQ,MAAO,CAAEC,MAAO,QAASC,aAAc,IAAMN,UAAU,oBACvEJ,EAAMW,oBCDEC,eAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAV,OAAAW,EAAA,EAAAX,CAAAY,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAV,OAAAmB,EAAA,EAAAnB,CAAAY,MAAAH,EAAAT,OAAAoB,EAAA,EAAApB,CAAAO,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAW,OAAAP,MACIQ,MAAQ,CACJC,EAAGf,EAAKf,MAAM8B,EACdC,KAAM,GACNC,MAAO,IAJfjB,EAAA,OAAAV,OAAA4B,EAAA,EAAA5B,CAAAO,EAAAC,GAAAR,OAAA6B,EAAA,EAAA7B,CAAAO,EAAA,EAAAuB,IAAA,qBAAAC,MAAA,WAOQnB,KAAKoB,SAAS,CACVN,KAAMd,KAAKY,MAAMC,EAAEQ,MAAM,EAAGrB,KAAKY,MAAMC,EAAEV,OAAO,GAChDY,MAAOf,KAAKY,MAAMC,EAAEQ,MAAMrB,KAAKY,MAAMC,EAAEV,OAAO,EAAGH,KAAKY,MAAMC,EAAEV,YAT1E,CAAAe,IAAA,SAAAC,MAAA,WAaQ,OACAnC,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,OACRtC,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,eACPtC,EAAAC,EAAAC,cAAA,MAAIoC,MAAM,QACLtB,KAAKY,MAAMG,MAAMQ,IAAI,SAAAV,GAAC,OACnB7B,EAAAC,EAAAC,cAAA,MAAIoC,MAAM,QAAQT,OAI9B7B,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,eACPtC,EAAAC,EAAAC,cAAA,MAAIoC,MAAM,QACTtB,KAAKY,MAAME,KAAKS,IAAI,SAAAV,GAAC,OACd7B,EAAAC,EAAAC,cAAA,MAAIoC,MAAM,QAAQT,YAzB1ClB,EAAA,CAAiC6B,cCCpBC,SAAb,SAAA7B,GAAA,SAAA6B,IAAA,IAAA5B,EAAAC,EAAAV,OAAAW,EAAA,EAAAX,CAAAY,KAAAyB,GAAA,QAAAxB,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAV,OAAAmB,EAAA,EAAAnB,CAAAY,MAAAH,EAAAT,OAAAoB,EAAA,EAAApB,CAAAqC,IAAAhB,KAAAC,MAAAb,EAAA,CAAAG,MAAAW,OAAAP,MACIQ,MAAQ,CACJc,OAAQ5B,EAAKf,MAAM2C,QAF3B5B,EAAA,OAAAV,OAAA4B,EAAA,EAAA5B,CAAAqC,EAAA7B,GAAAR,OAAA6B,EAAA,EAAA7B,CAAAqC,EAAA,EAAAP,IAAA,SAAAC,MAAA,WAMQ,OACInC,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,oBACPtC,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,OACPtC,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,YACPtC,EAAAC,EAAAC,cAAA,MAAIoC,MAAM,qBAAV,gBAGAtC,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,OACPtC,EAAAC,EAAAC,cAACyC,EAAD,CAAad,EAAGb,KAAKY,MAAMc,OAAOE,mBAG1C5C,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,YACPtC,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,UAAUO,IAAI,kCAAkCC,MAAM,WAGzE9C,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,yBACPtC,EAAAC,EAAAC,cAAA,MAAIoC,MAAM,qBAAV,iBACAtC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,gBACPtC,EAAAC,EAAAC,cAAA,UACCc,KAAKY,MAAMc,OAAOK,aAAaR,IAAI,SAAAS,GAAW,OAC3ChD,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,eACPtC,EAAAC,EAAAC,cAAA,UAAK8C,cA5BrCP,EAAA,CAA6BD,cAuCdC,ICrCFQ,EAAb,SAAArC,GAAA,SAAAqC,IAAA,IAAApC,EAAAC,EAAAV,OAAAW,EAAA,EAAAX,CAAAY,KAAAiC,GAAA,QAAAhC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAV,OAAAmB,EAAA,EAAAnB,CAAAY,MAAAH,EAAAT,OAAAoB,EAAA,EAAApB,CAAA6C,IAAAxB,KAAAC,MAAAb,EAAA,CAAAG,MAAAW,OAAAP,MACIQ,MAAQ,CACAc,OAAQ5B,EAAKf,MAAM2C,QAF/B5B,EAAA,OAAAV,OAAA4B,EAAA,EAAA5B,CAAA6C,EAAArC,GAAAR,OAAA6B,EAAA,EAAA7B,CAAA6C,EAAA,EAAAf,IAAA,SAAAC,MAAA,WAKa,IAAAe,EAAAlC,KACDmC,EAAK,WAAanC,KAAKY,MAAMc,OAAOU,IACpCC,EAAK,YAAcrC,KAAKY,MAAMc,OAAOU,IACzC,OACIpD,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,YAAY9C,GAAG,oBAC1BQ,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,QACPtC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,cAAc9C,GAAG,cACxBQ,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,OACPtC,EAAAC,EAAAC,cAAA,MAAIoC,MAAM,QACNtC,EAAAC,EAAAC,cAAA,UAAQoC,MAAM,+BAA+BgB,KAAK,SAASC,cAAY,WAAWC,cAAaH,EAAII,gBAAc,QAAQC,gBAAeP,GACnInC,KAAKY,MAAMc,OAAOiB,QAG3B3D,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,QACHtC,EAAAC,EAAAC,cAAA,QAAMoC,MAAM,cAAatC,EAAAC,EAAAC,cAAA,KAAGoC,MAAM,iBAAoBtB,KAAKY,MAAMc,OAAOkB,UACxE5D,EAAAC,EAAAC,cAAA,QAAMoC,MAAM,cAAatC,EAAAC,EAAAC,cAAA,KAAGoC,MAAM,+BAAkCtB,KAAKY,MAAMc,OAAOmB,aAG9F7D,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,iBACPtC,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,cACPtC,EAAAC,EAAAC,cAAA,UAAQoD,KAAK,SAAShB,MAAM,gCAAgCwB,QAAS,WAAO3E,EAAIM,aAAayD,EAAKtB,MAAMc,OAAOU,OAAOpD,EAAAC,EAAAC,cAAA,KAAGoC,MAAM,kBAC/HtC,EAAAC,EAAAC,cAAA,UAAQoD,KAAK,SAAShB,MAAM,kCAAiCtC,EAAAC,EAAAC,cAAA,KAAGoC,MAAM,oBAMlFtC,EAAAC,EAAAC,cAAA,OAAKV,GAAI2D,EAAIb,MAAM,WAAWyB,kBAAgB,aAAaC,cAAY,qBACnEhE,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,aACPtC,EAAAC,EAAAC,cAAC+D,EAAD,CAASvB,OAAQ1B,KAAKY,MAAMc,kBAnC5DO,EAAA,CAAgCT,aC0DjB0B,oNAlDXtC,MAAQ,CACJuC,QAAS,MAQbC,YAAc,WACVjF,EAAIC,aAEKiF,KAAK,SAAAC,GAAG,OAAIxD,EAAKsB,SAAS,CAAE+B,QAASG,EAAIC,SACzCC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAGtCG,kBAAoB,SAAAC,GAAS,IAAAC,EACPD,EAAME,OAAtBC,EADuBF,EACvBE,KAAM7C,EADiB2C,EACjB3C,MACdrB,EAAKsB,SAALhC,OAAA6E,EAAA,EAAA7E,CAAA,GACE4E,EAAO7C,OAIP+C,aAAe,WACXpE,EAAKf,MAAMoF,QAAQC,KAAK,WAE5B3F,aAAe,SAACD,GACZL,EAAIM,aAAaD,GACjBsB,EAAKsB,SAAS,CACV+B,QAASrD,EAAKc,MAAMuC,QAAQkB,OAAO,SAAA3C,GAAM,OAAIA,EAAOU,MAAQ5D,0FAzBhEwB,KAAKoD,2DAGLpD,KAAKoD,+CA2BL,OACQpE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKoF,UAAU,kBACVtE,KAAKY,MAAMuC,QAAQ5B,IAAI,SAAAG,GAAM,OAAK1C,EAAAC,EAAAC,cAACqF,EAAD,CAAY7C,OAAQA,OAG3D1C,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAQC,QAAQ,UAAU3B,QAAS9C,KAAKkE,cAAxC,iBAzCE1C,cCwDPkD,qNA7DX9D,MAAQ,CACJuC,QAAS,GACTR,MAAO,GACPC,SAAU,GACVC,WAAY,GACZjB,eAAgB,GAChBG,aAAc,MAElB6B,kBAAoB,SAAAC,GAAS,IAAAC,EACPD,EAAME,OAAtBC,EADuBF,EACvBE,KAAM7C,EADiB2C,EACjB3C,MACdrB,EAAKsB,SAALhC,OAAA6E,EAAA,EAAA7E,CAAA,GACE4E,EAAO7C,OAGPwD,iBAAmB,SAAAd,GACfA,EAAMe,iBACNzG,EAAIQ,WAAW,CACXgE,MAAO7C,EAAKc,MAAM+B,MAClBC,SAAU9C,EAAKc,MAAMgC,SACrBC,WAAY/C,EAAKc,MAAMiC,WACvBjB,eAAgB9B,EAAKc,MAAMgB,eAAeiD,MAAM,KAChD9C,aAAcjC,EAAKc,MAAMmB,aAAa8C,MAAM,QAE3CxB,KAAK,SAAAC,GAAG,OAAIxD,EAAKsD,gBACjBI,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,KAC9B3D,EAAKf,MAAMoF,QAAQC,KAAK,8EAGxB,OACApF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC4F,EAAD,CACQ3D,MAAOnB,KAAKY,MAAM+B,MAClBoC,SAAU/E,KAAK4D,kBACfI,KAAK,QACLgB,YAAY,qBAEpBhG,EAAAC,EAAAC,cAAC4F,EAAD,CACQ3D,MAAOnB,KAAKY,MAAMgC,SAClBmC,SAAU/E,KAAK4D,kBACfI,KAAK,WACLgB,YAAY,yBAEpBhG,EAAAC,EAAAC,cAAC4F,EAAD,CACQ3D,MAAOnB,KAAKY,MAAMiC,WAClBkC,SAAU/E,KAAK4D,kBACfI,KAAK,aACLgB,YAAY,eAEpBhG,EAAAC,EAAAC,cAAA,YAAUoC,MAAM,WAAWH,MAAOnB,KAAKY,MAAMgB,eAAgBmD,SAAU/E,KAAK4D,kBAAmBI,KAAK,iBAAiBgB,YAAY,6CACjIhG,EAAAC,EAAAC,cAAA,YAAUoC,MAAM,WAAWH,MAAOnB,KAAKY,MAAMmB,aAAcgD,SAAU/E,KAAK4D,kBAAmBI,KAAK,eAAegB,YAAY,kDAC7HhG,EAAAC,EAAAC,cAAC+F,EAAD,CAEQnC,QAAS9C,KAAK2E,kBAFtB,yBAnDYnD,gCCgBT0D,EAdH,kBACXlG,EAAAC,EAAAC,cAACiG,EAAA,EAAD,KACCnG,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACkG,EAAA,EAAD,MACApG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,KACCrG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvC,IACjClE,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWvC,IACvClE,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,OAAOC,UAAWf,IACpC1F,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,UAAWhE,QCL3BiE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kECXNC,IAASC,OAAOhH,EAAAC,EAAAC,cAAC+G,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjD,KAAK,SAAAkD,GACjCA,EAAaC","file":"static/js/main.75bee83d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default {\r\n\t// Gets all recipes\r\n\tgetRecipes: function() {\r\n\t\treturn axios.get('/api/recipe');\r\n\t},\r\n\t// Gets the recipe with the given id\r\n\tgetRecipe: function(id) {\r\n\t\treturn axios.get('/api/recipe/' + id);\r\n\t},\r\n\t// Deletes the recipe with the given id\r\n\tdeleteRecipe: function(id) {\r\n\t\treturn axios.delete('/api/recipe/' + id);\r\n\t},\r\n\t// Saves a recipe to the database\r\n\tsaveRecipe: function(recipeData) {\r\n\t\treturn axios.post('/api/recipe', recipeData);\r\n\t}\r\n};","import React from \"react\";\r\n\r\nexport const Input = props => (\r\n  <div className=\"form-group\">\r\n    <input className=\"form-control\" {...props} />\r\n  </div>\r\n);","import React from \"react\";\r\n\r\nexport const FormBtn = props => (\r\n  <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\r\n    {props.children}\r\n  </button>\r\n);","import React, { Component } from 'react';\r\nimport './Ingredients.css';\r\n\r\nexport class Ingredients extends Component{\r\n    state = {\r\n        i: this.props.i,\r\n        left: [],\r\n        right: []\r\n    }\r\n    componentWillMount (){\r\n        this.setState({\r\n            left: this.state.i.slice(0, this.state.i.length/2),\r\n            right: this.state.i.slice(this.state.i.length/2, this.state.i.length)\r\n        })\r\n    }\r\n    render() {\r\n        return(\r\n        <div class =\"row\">\r\n            <div class=\"ingredients\">\r\n                <ul class=\"icon\">  \r\n                    {this.state.right.map(i => (\r\n                        <li class=\"li-s\">{i}</li>\r\n                    ))}\r\n                </ul>\r\n            </div> \r\n            <div class=\"ingredients\">\r\n                <ul class=\"icon\">\r\n                {this.state.left.map(i => (\r\n                        <li class=\"li-s\">{i}</li>\r\n                    ))}\r\n                </ul>   \r\n            </div> \r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Ingredients","import React, { Component } from 'react';\r\nimport { Ingredients } from './Ingredients';\r\nimport './Details.css';\r\n\r\nexport class Details extends Component{\r\n    state = {\r\n        recipe: this.props.recipe\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"detail-container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <h4 class=\"ingredients-title\">\r\n                            Ingredients:\r\n                        </h4>\r\n                        <div class=\"row\">\r\n                            <Ingredients i={this.state.recipe.ingredientList} />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <img class=\"foodpic\" src=\"https://placekitten.com/260/234\" width=\"100%\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"instruction-container\">\r\n                    <h3 class=\"instruction-title\">Instructions:</h3>\r\n                    <hr></hr>\r\n                    <div class=\"instructions\">\r\n                        <ol>\r\n                        {this.state.recipe.instructions.map(instruction => (\r\n                            <div class=\"instruction\">\r\n                                <li>{instruction}</li>\r\n                            </div>\r\n                        ))}\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Details;","import React, { Component } from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport './RecipeCard.css';\r\nimport {Details} from './Details';\r\nimport API from '../utils/API';\r\n\r\nexport class RecipeCard extends Component{\r\n    state = {\r\n            recipe: this.props.recipe\r\n    }\r\n\r\n    render() {\r\n        var c1 = \"collapse\" + this.state.recipe._id;\r\n        var c2 = \"#collapse\" + this.state.recipe._id;\r\n        return (\r\n            <div class=\"accordion\" id=\"accordionExample\">\r\n            <div class=\"card\">\r\n                <div>\r\n                    <div class=\"card-header\" id=\"headingOne\">\r\n                        <div class=\"row\">\r\n                            <h4 class=\"mb-0\">\r\n                                <button class=\"btn btn-link collapsed title\" type=\"button\" data-toggle=\"collapse\" data-target={c2} aria-expanded=\"false\" aria-controls={c1}>\r\n                                    {this.state.recipe.title}\r\n                                </button>\r\n                            </h4>\r\n                            <div class=\"desc\">\r\n                                    <span class=\"card-title\"><i class=\"fas fa-clock\"></i>{this.state.recipe.cookTime}</span>\r\n                                    <span class=\"card-title\"><i class=\"fa fa-exclamation-triangle\"></i>{this.state.recipe.difficulty}</span>\r\n                            </div>\r\n\r\n                            <div class=\"button-column\">\r\n                                <div class=\"button-row\">\r\n                                    <button type=\"button\" class=\"btn btn-outline-danger btn-sm\" onClick={() => {API.deleteRecipe(this.state.recipe._id)}}><i class=\"fas fa-times\"></i></button>\r\n                                    <button type=\"button\" class=\"btn btn-outline-primary btn-sm\"><i class=\"fas fa-pen\"></i></button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        <div id={c1} class=\"collapse\" aria-labelledby=\"headingOne\" data-parent=\"#accordionExample\">\r\n                            <div class=\"card-body\">\r\n                                <Details recipe={this.state.recipe}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nexport default RecipeCard;","import API from '../utils/API';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport { Input } from '../components/Form/Input.js';\r\nimport { FormBtn } from '../components/Form/FormBtn.js';\r\nimport {Button} from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport { RecipeCard } from './RecipeCard';\r\nimport './Recipes.css';\r\n\r\n\r\n\r\n\r\nclass Recipes extends Component{\r\n    state = {\r\n        recipes: []\r\n    };\r\n    componentDidMount() {\r\n        this.loadRecipes();\r\n    }\r\n    componentDidUpdate() {\r\n        this.loadRecipes();\r\n    }\r\n    loadRecipes = () => {\r\n        API.getRecipes()\r\n                // .then(res => console.log(res.data))\r\n                .then(res => this.setState({ recipes: res.data}))\r\n                .catch(err => console.log(err));\r\n\r\n    };\r\n    handleInputChange = event => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n    handleCreate = () => {\r\n        this.props.history.push('/add');\r\n    };\r\n    deleteRecipe = (id) => {\r\n        API.deleteRecipe(id);\r\n        this.setState({\r\n            recipes: this.state.recipes.filter(recipe => recipe._id !== id)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div>\r\n                    <div classname=\"card-container\">\r\n                        {this.state.recipes.map(recipe => (<RecipeCard recipe={recipe}/>))}\r\n                    </div>\r\n                    \r\n                    <Button bsStyle=\"primary\" onClick={this.handleCreate}>\r\n                        + Add\r\n                    </Button>\r\n                </div>\r\n\r\n            \r\n        );\r\n    }\r\n\r\n}\r\nexport default Recipes;","import API from '../utils/API';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport { Input } from '../components/Form/Input.js';\r\nimport { FormBtn } from '../components/Form/FormBtn.js';\r\nimport './NewRecipe.css';\r\n\r\nclass NewRecipe extends Component{\r\n    state = {\r\n        recipes: [],\r\n        title: '',\r\n        cookTime: '',\r\n        difficulty: '',\r\n        ingredientList: '',\r\n        instructions: ''\r\n    };\r\n    handleInputChange = event => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n    };\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        API.saveRecipe({\r\n            title: this.state.title,\r\n            cookTime: this.state.cookTime,\r\n            difficulty: this.state.difficulty,\r\n            ingredientList: this.state.ingredientList.split(','),\r\n            instructions: this.state.instructions.split('\\n')\r\n            })\r\n            .then(res => this.loadRecipes())\r\n            .catch(err => console.log(err));\r\n        this.props.history.push('/');\r\n    };\r\n    render() {\r\n        return (\r\n        <form>\r\n            <Input \r\n                    value={this.state.title}\r\n                    onChange={this.handleInputChange}\r\n                    name=\"title\"\r\n                    placeholder=\"Title (required)\" \r\n                />\r\n            <Input\r\n                    value={this.state.cookTime}\r\n                    onChange={this.handleInputChange}\r\n                    name=\"cookTime\"\r\n                    placeholder=\"Cook Time (required)\"\r\n                />\r\n            <Input\r\n                    value={this.state.difficulty}\r\n                    onChange={this.handleInputChange}\r\n                    name=\"difficulty\"\r\n                    placeholder=\"Difficulty\"\r\n            />\r\n            <textarea class=\"ing-text\" value={this.state.ingredientList} onChange={this.handleInputChange} name=\"ingredientList\" placeholder=\"Ingredients (Separate each with a comma)\"/>\r\n            <textarea class=\"ins-text\" value={this.state.instructions} onChange={this.handleInputChange} name=\"instructions\" placeholder=\"Instructions (Separate each with a new line!)\"/>\r\n            <FormBtn\r\n                    //disabled={!(this.state.cookTime && this.state.title)}\r\n                    onClick={this.handleFormSubmit}\r\n                    >\r\n                    Submit Recipe\r\n            </FormBtn>\r\n        </form>\r\n        );\r\n    }\r\n\r\n}\r\nexport default NewRecipe;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Recipes from './pages/Recipes';\r\nimport NewRecipe from './pages/NewRecipe';\r\nimport RecipeCard from './pages/RecipeCard';\r\nimport Details from './pages/Details';\r\nimport './App.css';\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nconst App = () => (\r\n\t<Router>\r\n\t\t<div>\r\n\t\t\t<Nav />\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/\" component={Recipes} />\r\n\t\t\t\t<Route exact path=\"/recipe\" component={Recipes} />\r\n\t\t\t\t<Route exact path=\"/add\" component={NewRecipe} />\r\n\t\t\t\t<Route exact path=\"/recipe/:id\" component={Details} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t</Router>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}