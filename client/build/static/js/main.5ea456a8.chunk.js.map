{"version":3,"sources":["utils/API.js","components/Form/Input.js","components/Form/FormBtn.js","pages/Ingredients.js","pages/Details.js","pages/RecipeCard.js","pages/Recipes.js","pages/NewRecipe.js","App.js","serviceWorker.js","index.js"],"names":["API","getRecipes","axios","get","getRecipe","id","deleteRecipe","delete","saveRecipe","recipeData","post","Input","props","react_default","a","createElement","className","Object","assign","FormBtn","style","float","marginBottom","children","Ingredients","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","i","inherits","createClass","key","value","class","Component","Details","recipe","Ingredients_Ingredients","ingredientList","src","width","instructions","map","instruction","RecipeCard","_this2","c1","_id","c2","type","data-toggle","data-target","aria-expanded","aria-controls","title","cookTime","difficulty","onClick","aria-labelledby","data-parent","Details_Details","Recipes","recipes","loadRecipes","then","res","setState","data","catch","err","console","log","handleInputChange","event","_event$target","target","name","defineProperty","handleCreate","history","push","filter","classname","RecipeCard_RecipeCard","Button","bsStyle","NewRecipe","handleFormSubmit","preventDefault","split","Input_Input","onChange","placeholder","FormBtn_FormBtn","App","BrowserRouter","Nav","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ea456a8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default {\r\n\t// Gets all recipes\r\n\tgetRecipes: function() {\r\n\t\treturn axios.get('/api/recipe');\r\n\t},\r\n\t// Gets the recipe with the given id\r\n\tgetRecipe: function(id) {\r\n\t\treturn axios.get('/api/recipe/' + id);\r\n\t},\r\n\t// Deletes the recipe with the given id\r\n\tdeleteRecipe: function(id) {\r\n\t\treturn axios.delete('/api/recipe/' + id);\r\n\t},\r\n\t// Saves a recipe to the database\r\n\tsaveRecipe: function(recipeData) {\r\n\t\treturn axios.post('/api/recipe', recipeData);\r\n\t}\r\n};","import React from \"react\";\r\n\r\nexport const Input = props => (\r\n  <div className=\"form-group\">\r\n    <input className=\"form-control\" {...props} />\r\n  </div>\r\n);","import React from \"react\";\r\n\r\nexport const FormBtn = props => (\r\n  <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\r\n    {props.children}\r\n  </button>\r\n);","import React, { Component } from 'react';\r\nimport './Ingredients.css';\r\n\r\nexport class Ingredients extends Component{\r\n    state = {\r\n        i: this.props.i\r\n    }\r\n    render() {\r\n        return(\r\n        <div class =\"row\">\r\n            <div class=\"ingredients\">\r\n                <ul class=\"icon\">  \r\n                    <li>\r\n                        {this.state.i[0]}\r\n                    </li>\r\n                    <li>\r\n                        {this.state.i[2]}\r\n                    </li>\r\n                </ul>\r\n            </div> \r\n            <div class=\"ingredients\">\r\n                <ul class=\"icon\">\r\n                    <li>\r\n                        {this.state.i[1]}\r\n                    </li>\r\n                    <li>\r\n                        {this.state.i[3]}\r\n                    </li>\r\n                </ul>   \r\n            </div> \r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Ingredients","import React, { Component } from 'react';\r\nimport { Ingredients } from './Ingredients';\r\nimport './Details.css';\r\n\r\nexport class Details extends Component{\r\n    state = {\r\n        recipe: this.props.recipe\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"detail-container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <h4 class=\"ingredients-title\">\r\n                            <span>\r\n                                Ingredients:\r\n                            </span>\r\n                        </h4>\r\n                        <div class=\"row\">\r\n                            <Ingredients i={this.state.recipe.ingredientList} />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <img class=\"foodpic\" src=\"http://placekitten.com/234/234\" width=\"100%\" />\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <div class=\"instruction-container\">\r\n                    <h3 class=\"instruction-title\">Instructions:</h3>\r\n                    <hr></hr>\r\n                    <div class=\"instructions\">\r\n                        <ol>\r\n                        {this.state.recipe.instructions.map(instruction => (\r\n                            <div class=\"instruction\">\r\n                                <li>{instruction}</li>\r\n                            </div>\r\n                        ))}\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Details;","import React, { Component } from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport './RecipeCard.css';\r\nimport {Details} from './Details';\r\nimport API from '../utils/API';\r\n\r\nexport class RecipeCard extends Component{\r\n    state = {\r\n            recipe: this.props.recipe\r\n    }\r\n\r\n    render() {\r\n        var c1 = \"collapse\" + this.state.recipe._id;\r\n        var c2 = \"#collapse\" + this.state.recipe._id;\r\n        return (\r\n            <div class=\"accordion\" id=\"accordionExample\">\r\n            <div class=\"card\">\r\n                <div>\r\n                    <div class=\"card-header\" id=\"headingOne\">\r\n                        <div class=\"row\">\r\n                            <h4 class=\"mb-0\">\r\n                                <button class=\"btn btn-link collapsed title\" type=\"button\" data-toggle=\"collapse\" data-target={c2} aria-expanded=\"false\" aria-controls={c1}>\r\n                                    {this.state.recipe.title}\r\n                                </button>\r\n                            </h4>\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"row\">\r\n                                    <span class=\"card-title\"><i class=\"fas fa-clock\"></i>{this.state.recipe.cookTime}</span>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <span class=\"card-title\"><i class=\"fa fa-exclamation-triangle\"></i>{this.state.recipe.difficulty}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md\">\r\n                                <div class=\"button-row\">\r\n                                    <span>\r\n                                    <button type=\"button\" class=\"btn btn-warning\"><i class=\"fas fa-pen\"></i>Edit</button>\r\n                                    <button type=\"button\" class=\"btn btn-danger\" onClick={() => {API.deleteRecipe(this.state.recipe._id)}}><i class=\"fas fa-times\"></i>Delete</button>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        <div id={c1} class=\"collapse\" aria-labelledby=\"headingOne\" data-parent=\"#accordionExample\">\r\n                            <div class=\"card-body\">\r\n                                <Details recipe={this.state.recipe}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nexport default RecipeCard;","import API from '../utils/API';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport { Input } from '../components/Form/Input.js';\r\nimport { FormBtn } from '../components/Form/FormBtn.js';\r\nimport {Button} from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport { RecipeCard } from './RecipeCard';\r\nimport './Recipes.css';\r\n\r\n\r\n\r\n\r\nclass Recipes extends Component{\r\n    state = {\r\n        recipes: []\r\n    };\r\n    componentDidMount() {\r\n        this.loadRecipes();\r\n    }\r\n    componentDidUpdate() {\r\n        this.loadRecipes();\r\n    }\r\n    loadRecipes = () => {\r\n        API.getRecipes()\r\n                // .then(res => console.log(res.data))\r\n                .then(res => this.setState({ recipes: res.data}))\r\n                .catch(err => console.log(err));\r\n\r\n    };\r\n    handleInputChange = event => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n    handleCreate = () => {\r\n        this.props.history.push('/add');\r\n    };\r\n    deleteRecipe = (id) => {\r\n        API.deleteRecipe(id);\r\n        this.setState({\r\n            recipes: this.state.recipes.filter(recipe => recipe._id !== id)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div>\r\n                    <div classname=\"card-container\">\r\n                        {this.state.recipes.map(recipe => (<RecipeCard recipe={recipe}/>))}\r\n                    </div>\r\n                    \r\n                    <Button bsStyle=\"primary\" onClick={this.handleCreate}>\r\n                        + Add\r\n                    </Button>\r\n                </div>\r\n\r\n            \r\n        );\r\n    }\r\n\r\n}\r\nexport default Recipes;","import API from '../utils/API';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport { Input } from '../components/Form/Input.js';\r\nimport { FormBtn } from '../components/Form/FormBtn.js';\r\nimport './NewRecipe.css';\r\n\r\nclass NewRecipe extends Component{\r\n    state = {\r\n        recipes: [],\r\n        title: '',\r\n        cookTime: '',\r\n        difficulty: '',\r\n        ingredientList: '',\r\n        instructions: ''\r\n    };\r\n    handleInputChange = event => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n    };\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        API.saveRecipe({\r\n            title: this.state.title,\r\n            cookTime: this.state.cookTime,\r\n            difficulty: this.state.difficulty,\r\n            ingredientList: this.state.ingredientList.split(','),\r\n            instructions: this.state.instructions.split('\\n')\r\n            })\r\n            .then(res => this.loadRecipes())\r\n            .catch(err => console.log(err));\r\n        this.props.history.push('/');\r\n    };\r\n    render() {\r\n        return (\r\n        <form>\r\n            <Input \r\n                    value={this.state.title}\r\n                    onChange={this.handleInputChange}\r\n                    name=\"title\"\r\n                    placeholder=\"Title (required)\" \r\n                />\r\n            <Input\r\n                    value={this.state.cookTime}\r\n                    onChange={this.handleInputChange}\r\n                    name=\"cookTime\"\r\n                    placeholder=\"Cook Time (required)\"\r\n                />\r\n            <Input\r\n                    value={this.state.difficulty}\r\n                    onChange={this.handleInputChange}\r\n                    name=\"difficulty\"\r\n                    placeholder=\"Difficulty\"\r\n            />\r\n            <textarea class=\"ing-text\" value={this.state.ingredientList} onChange={this.handleInputChange} name=\"ingredientList\" placeholder=\"Ingredients (Separate each with a comma)\"/>\r\n            <textarea class=\"ins-text\" value={this.state.instructions} onChange={this.handleInputChange} name=\"instructions\" placeholder=\"Instructions (Separate each with a new line!)\"/>\r\n            <FormBtn\r\n                    //disabled={!(this.state.cookTime && this.state.title)}\r\n                    onClick={this.handleFormSubmit}\r\n                    >\r\n                    Submit Recipe\r\n            </FormBtn>\r\n        </form>\r\n        );\r\n    }\r\n\r\n}\r\nexport default NewRecipe;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Recipes from './pages/Recipes';\nimport NewRecipe from './pages/NewRecipe';\nimport RecipeCard from './pages/RecipeCard';\nimport Details from './pages/Details';\nimport './App.css';\nimport { Nav } from 'react-bootstrap';\n\nconst App = () => (\n\t<Router>\n\t\t<div>\n\t\t\t<Nav />\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={Recipes} />\n\t\t\t\t<Route exact path=\"/recipe\" component={Recipes} />\n\t\t\t\t<Route exact path=\"/add\" component={NewRecipe} />\n\t\t\t\t<Route exact path=\"/recipe/:id\" component={Details} />\n\t\t\t</Switch>\n\t\t</div>\n\t</Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}